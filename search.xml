<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>BukkitTools</title>
      <link href="/2023/07/01/BukkitTools/"/>
      <url>/2023/07/01/BukkitTools/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>测试使用时用的是spigot1.16.5的api。<br>此文章仅展示一些我平时会写的用法。</p><h1 id="0-前置接口"><a href="#0-前置接口" class="headerlink" title="0.前置接口"></a>0.前置接口</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">SphereExecute</span> &#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">execute</span><span class="params">(Location center,Location loc)</span>; <span class="comment">//center中心位置 loc触发位置</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">EntitiesAtExecute</span> &#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">execute</span><span class="params">(Entity target)</span>; <span class="comment">//对象实体</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">MovementDirection</span> &#123;</span><br><span class="line">    FORWARD,</span><br><span class="line">    BACKWARD,</span><br><span class="line">    LEFT,</span><br><span class="line">    RIGHT,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="1-治愈玩家"><a href="#1-治愈玩家" class="headerlink" title="1.治愈玩家"></a>1.治愈玩家</h1><p>根据玩家最大血量治愈百分比血量方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">healEntity</span><span class="params">(Entity entity, <span class="type">double</span> percentage)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!(entity <span class="keyword">instanceof</span> LivingEntity)) &#123;</span><br><span class="line">            <span class="comment">// 如果实体不是LivingEntity类型，无法进行血量恢复</span></span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">LivingEntity</span> <span class="variable">livingEntity</span> <span class="operator">=</span> (LivingEntity) entity;</span><br><span class="line">        <span class="type">double</span> <span class="variable">maxHealth</span> <span class="operator">=</span> livingEntity.getMaxHealth(); <span class="comment">// 获取实体的最大血量</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">healAmount</span> <span class="operator">=</span> maxHealth * percentage / <span class="number">100</span>; <span class="comment">// 计算恢复的血量数值</span></span><br><span class="line"></span><br><span class="line">        <span class="type">double</span> <span class="variable">currentHealth</span> <span class="operator">=</span> livingEntity.getHealth(); <span class="comment">// 获取实体当前血量</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">newHealth</span> <span class="operator">=</span> Math.min(currentHealth + healAmount, maxHealth); <span class="comment">// 计算新的血量，不超过最大血量</span></span><br><span class="line"></span><br><span class="line">        livingEntity.setHealth(newHealth); <span class="comment">// 设置实体的血量</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><code>entity</code>所需要治愈的实体<br><code>percentage</code>治愈百分比<code>0-100</code></p><h1 id="2-获取周围实体"><a href="#2-获取周围实体" class="headerlink" title="2.获取周围实体"></a>2.获取周围实体</h1><p>获取指定位置附加的实体,并进行指定的方法处理</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">EntitiesAtLocation</span><span class="params">(Location location, <span class="type">double</span> radius, EntitiesAtExecute entitiesAtExecute)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (Entity entity : location.getWorld().getNearbyEntities(location, radius, radius, radius)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (entity <span class="keyword">instanceof</span> LivingEntity) &#123;</span><br><span class="line">                <span class="type">LivingEntity</span> <span class="variable">target</span> <span class="operator">=</span> (LivingEntity) entity;</span><br><span class="line">                entitiesAtExecute.execute(target); <span class="comment">//实现自定义方法的处理</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><code>location</code>需要获取的中心位置<br><code>radius</code>中心位置向外的半径<br><code>entitiesAtExecute</code>可自定义的方法</p><h1 id="3-对实体施加力"><a href="#3-对实体施加力" class="headerlink" title="3.对实体施加力"></a>3.对实体施加力</h1><p>使实体前后左右移动的方法,或者说是施加一个力让玩家弹射出去</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">movePlayer</span><span class="params">(Entity player, <span class="type">double</span> distance, <span class="type">double</span> extraForce, MovementDirection direction)</span> &#123;</span><br><span class="line">        <span class="type">Vector</span> <span class="variable">playerDirection</span> <span class="operator">=</span> player.getLocation().getDirection().normalize();</span><br><span class="line">        playerDirection.setY(<span class="number">0</span>); <span class="comment">// 忽略垂直方向的移动</span></span><br><span class="line">        playerDirection.multiply(distance);</span><br><span class="line"></span><br><span class="line">        <span class="type">Vector</span> <span class="variable">velocity</span> <span class="operator">=</span> player.getVelocity();</span><br><span class="line">        <span class="keyword">switch</span> (direction) &#123;</span><br><span class="line">            <span class="keyword">case</span> FORWARD:</span><br><span class="line">                velocity.add(playerDirection.multiply(extraForce));</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> BACKWARD:</span><br><span class="line">                playerDirection.multiply(-<span class="number">1</span>); <span class="comment">// 反向移动</span></span><br><span class="line">                velocity.add(playerDirection.multiply(extraForce));</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> LEFT:</span><br><span class="line">                <span class="type">Vector</span> <span class="variable">left</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Vector</span>(-playerDirection.getZ(), <span class="number">0</span>, playerDirection.getX()); <span class="comment">// 左方向向量</span></span><br><span class="line">                playerDirection.add(left);</span><br><span class="line">                velocity.add(playerDirection.multiply(extraForce));</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> RIGHT:</span><br><span class="line">                <span class="type">Vector</span> <span class="variable">right</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Vector</span>(playerDirection.getZ(), <span class="number">0</span>, -playerDirection.getX()); <span class="comment">// 右方向向量</span></span><br><span class="line">                playerDirection.add(right);</span><br><span class="line">                velocity.add(playerDirection.multiply(extraForce));</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        player.setVelocity(velocity);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><code>player</code>所需要对其操作的实体<br><code>distance</code>移动的力<br><code>extraForce</code>额外施加的力<br><code>direction</code>方向<br>如果想让实体向上的话可以使用这个这个:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">UPlaunchEntity</span><span class="params">(Entity entity, <span class="type">double</span> power)</span> &#123;</span><br><span class="line">        <span class="type">Vector</span> <span class="variable">velocity</span> <span class="operator">=</span> entity.getVelocity();</span><br><span class="line">        velocity.setY(power); <span class="comment">// 设置Y方向上的速度，可以根据需要调整</span></span><br><span class="line">        entity.setVelocity(velocity);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h1 id="4-指定实体位置-吸收周围实体"><a href="#4-指定实体位置-吸收周围实体" class="headerlink" title="4.指定实体位置,吸收周围实体"></a>4.指定实体位置,吸收周围实体</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">attractEntities</span><span class="params">(Entity entity, <span class="type">double</span> attractionRange, <span class="type">double</span> attractionStrength)</span> &#123;</span><br><span class="line">        <span class="type">Location</span> <span class="variable">entityLocation</span> <span class="operator">=</span> entity.getLocation();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取附近的实体</span></span><br><span class="line">        <span class="keyword">for</span> (Entity nearbyEntity : entity.getNearbyEntities(attractionRange, attractionRange, attractionRange)) &#123;</span><br><span class="line">            <span class="comment">// 排除实体自身</span></span><br><span class="line">            <span class="keyword">if</span> (nearbyEntity.equals(entity)) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="type">Location</span> <span class="variable">nearbyLocation</span> <span class="operator">=</span> nearbyEntity.getLocation();</span><br><span class="line">            <span class="type">Vector</span> <span class="variable">direction</span> <span class="operator">=</span> entityLocation.toVector().subtract(nearbyLocation.toVector()).normalize();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 计算实体受到的吸引力</span></span><br><span class="line">            <span class="type">Vector</span> <span class="variable">attractionForce</span> <span class="operator">=</span> direction.multiply(attractionStrength);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 将实体移动到目标实体身边</span></span><br><span class="line">            nearbyEntity.setVelocity(attractionForce);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><code>entity</code>中心实体<br><code>attractionRange</code>吸收半径<br><code>attractionStrength</code>吸收强度</p>]]></content>
      
      
      <categories>
          
          <category> Minecraft </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Minecraft </tag>
            
            <tag> Bukkit </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bukkit中关于&#39;冷却&#39;的写法</title>
      <link href="/2023/07/01/BukkitApiCooldown/"/>
      <url>/2023/07/01/BukkitApiCooldown/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这个功能是针对每个玩家以及每个技能或者事件的冷却去编写的。<br>测试使用时用的是spigot1.16.5的api。<br>文章中看到技能或者事件,可以理解为一个意思,只是有时候表达为事件有时候表达为技能<br><code>注</code>:此文章仅是展示代码及代码用法,并不是教程！！</p><h1 id="1-理论"><a href="#1-理论" class="headerlink" title="1.理论"></a>1.理论</h1><p>既然是针对每个玩家及其技能或事件来的话,那就需要一个表来存储数据用于判断。</p><h1 id="2-实践"><a href="#2-实践" class="headerlink" title="2.实践"></a>2.实践</h1><p>首先创建一个存储数据的Map表:</p><h2 id="表"><a href="#表" class="headerlink" title="表"></a>表</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> Map&lt;UUID, Map&lt;String, Long&gt;&gt; playerCooldowns;</span><br></pre></td></tr></table></figure><h2 id="类"><a href="#类" class="headerlink" title="类"></a>类</h2><p>这里的map键用的uuid会好区分,然后对应的值是另一个map,这个map存储的键是技能或事件名称,而值存储的是冷却所需要的时间,这样一个满足理论的变量就写好了。</p><p>然后创建一个类,就叫做<code>CooldownSystem</code>吧,顺便把构造函数写好:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CooldownSystem</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Map&lt;UUID, Map&lt;String, Long&gt;&gt; playerCooldowns;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">CooldownSystem</span><span class="params">()</span> &#123;</span><br><span class="line">        playerCooldowns = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">## 接口</span><br></pre></td></tr></table></figure><p>我们再创建一个接口用于这个类的某某事件的开放处理,这里这个接口我就叫做<code>OnCooldownInterFace</code>了:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">OnCooldownInterFace</span> &#123;</span><br><span class="line">        <span class="keyword">void</span> <span class="title function_">sendOnCooldownMsg</span><span class="params">(String skillName,<span class="type">long</span> RemainingCooldownTime)</span>;</span><br><span class="line">        <span class="keyword">void</span> <span class="title function_">createCooldownSkill</span><span class="params">(String skillName)</span>;</span><br><span class="line">        <span class="keyword">void</span> <span class="title function_">sendLastCoolDownMsg</span><span class="params">(String skillName)</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><code>sendOnCooldownMsg</code>这个方法用于处理事件处于冷却时发生的事情<br><code>createCooldownSkill</code>用于冷却开始时发生的事情<br><code>sendLastCoolDownMsg</code>用于冷却结时发生的事情</p><h2 id="实际方法"><a href="#实际方法" class="headerlink" title="实际方法"></a>实际方法</h2><p>接下来写创建一个冷却的方法<code>startCooldown</code>:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">startCooldown</span><span class="params">(UUID playerId, String skillName, <span class="type">long</span> cooldownSeconds)</span> &#123;</span><br><span class="line">        <span class="type">long</span> <span class="variable">cooldownEndTime</span> <span class="operator">=</span> System.currentTimeMillis() + cooldownSeconds * <span class="number">1000L</span>;</span><br><span class="line"></span><br><span class="line">        Map&lt;String, Long&gt; playerCooldownsMap = playerCooldowns.getOrDefault(playerId, <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;());</span><br><span class="line">        playerCooldownsMap.put(skillName, cooldownEndTime);</span><br><span class="line">        playerCooldowns.put(playerId, playerCooldownsMap);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>再就是是否正在冷却期间的方法<code>isOnCooldown</code>:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isOnCooldown</span><span class="params">(UUID playerId, String skillName)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (playerCooldowns.containsKey(playerId)) &#123;</span><br><span class="line">            Map&lt;String, Long&gt; playerCooldownsMap = playerCooldowns.get(playerId);</span><br><span class="line">            <span class="keyword">if</span> (playerCooldownsMap.containsKey(skillName)) &#123;</span><br><span class="line">                <span class="type">long</span> <span class="variable">cooldownEndTime</span> <span class="operator">=</span> playerCooldownsMap.get(skillName);</span><br><span class="line">                <span class="keyword">if</span> (System.currentTimeMillis() &lt; cooldownEndTime) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    playerCooldownsMap.remove(skillName);</span><br><span class="line">                    <span class="keyword">if</span> (playerCooldownsMap.isEmpty()) &#123;</span><br><span class="line">                        playerCooldowns.remove(playerId);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>然后可以根据需求附加一些需要的方法,例如获取剩余冷却描述,清除冷却之类的:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">long</span> <span class="title function_">getRemainingCooldownTime</span><span class="params">(UUID playerId, String skillName)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (isOnCooldown(playerId, skillName)) &#123;</span><br><span class="line">            <span class="type">long</span> <span class="variable">cooldownEndTime</span> <span class="operator">=</span> playerCooldowns.get(playerId).get(skillName);</span><br><span class="line">            <span class="keyword">return</span> (cooldownEndTime - System.currentTimeMillis()) / <span class="number">1000L</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">clearCooldown</span><span class="params">(UUID playerId, String skillName)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (playerCooldowns.containsKey(playerId)) &#123;</span><br><span class="line">            Map&lt;String, Long&gt; playerCooldownsMap = playerCooldowns.get(playerId);</span><br><span class="line">            playerCooldownsMap.remove(skillName);</span><br><span class="line">            <span class="keyword">if</span> (playerCooldownsMap.isEmpty()) &#123;</span><br><span class="line">                playerCooldowns.remove(playerId);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">clearAllCooldowns</span><span class="params">(UUID playerId)</span> &#123;</span><br><span class="line">        playerCooldowns.remove(playerId);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><code>getRemainingCooldownTime</code>获取剩余描述<br><code>clearCooldown</code>清除某个事件的冷却<br><code>clearAllCooldowns</code>清除某个玩家的所有事件或者技能的冷却</p><h2 id="活用"><a href="#活用" class="headerlink" title="活用"></a>活用</h2><p>实际上到了这里这个冷却的方法已经算写好了,但为了更高的活用性别忘了之前创建的接口,根据之前的接口我们创建一个更简洁的方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">OnColldownMenu</span><span class="params">(UUID playerId, String skillName, <span class="type">long</span> cooldownSeconds,OnCooldownInterFace onCooldownInterFace)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (isOnCooldown(playerId,skillName))&#123;</span><br><span class="line">            onCooldownInterFace.sendOnCooldownMsg(skillName,getRemainingCooldownTime(playerId,skillName));<span class="comment">//处于冷却时触发的事件</span></span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        startCooldown(playerId,skillName,cooldownSeconds);<span class="comment">//创建一个冷却</span></span><br><span class="line">        onCooldownInterFace.createCooldownSkill(skillName);<span class="comment">//冷却开始时触发的事件</span></span><br><span class="line">        <span class="comment">//这里因为使用的是System.currentTimeMillis(),所以就创建了一个BukkitRunable来实现冷却结束触发事件的效果</span></span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">BukkitRunnable</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">                onCooldownInterFace.sendLastCoolDownMsg(skillName);<span class="comment">//冷却结束时发生的事件</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;.runTaskLater(你插件的主类,<span class="number">20</span> * cooldownSeconds);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这样这个类就变得比较活用了,完整的代码如下:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CooldownSystem</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Map&lt;UUID, Map&lt;String, Long&gt;&gt; playerCooldowns;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">CooldownSystem</span><span class="params">()</span> &#123;</span><br><span class="line">        playerCooldowns = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">OnColldownMenu</span><span class="params">(UUID playerId, String skillName, <span class="type">long</span> cooldownSeconds,OnCooldownInterFace onCooldownInterFace)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (isOnCooldown(playerId,skillName))&#123;</span><br><span class="line">            onCooldownInterFace.sendOnCooldownMsg(skillName,getRemainingCooldownTime(playerId,skillName));</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        startCooldown(playerId,skillName,cooldownSeconds);</span><br><span class="line">        onCooldownInterFace.createCooldownSkill(skillName);</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">BukkitRunnable</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">                onCooldownInterFace.sendLastCoolDownMsg(skillName);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;.runTaskLater(aom.plugin,<span class="number">20</span> * cooldownSeconds);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">OnCooldownInterFace</span> &#123;</span><br><span class="line">        <span class="keyword">void</span> <span class="title function_">sendOnCooldownMsg</span><span class="params">(String skillName,<span class="type">long</span> RemainingCooldownTime)</span>;</span><br><span class="line">        <span class="keyword">void</span> <span class="title function_">createCooldownSkill</span><span class="params">(String skillName)</span>;</span><br><span class="line">        <span class="keyword">void</span> <span class="title function_">sendLastCoolDownMsg</span><span class="params">(String skillName)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">startCooldown</span><span class="params">(UUID playerId, String skillName, <span class="type">long</span> cooldownSeconds)</span> &#123;</span><br><span class="line">        <span class="type">long</span> <span class="variable">cooldownEndTime</span> <span class="operator">=</span> System.currentTimeMillis() + cooldownSeconds * <span class="number">1000L</span>;</span><br><span class="line"></span><br><span class="line">        Map&lt;String, Long&gt; playerCooldownsMap = playerCooldowns.getOrDefault(playerId, <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;());</span><br><span class="line">        playerCooldownsMap.put(skillName, cooldownEndTime);</span><br><span class="line">        playerCooldowns.put(playerId, playerCooldownsMap);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isOnCooldown</span><span class="params">(UUID playerId, String skillName)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (playerCooldowns.containsKey(playerId)) &#123;</span><br><span class="line">            Map&lt;String, Long&gt; playerCooldownsMap = playerCooldowns.get(playerId);</span><br><span class="line">            <span class="keyword">if</span> (playerCooldownsMap.containsKey(skillName)) &#123;</span><br><span class="line">                <span class="type">long</span> <span class="variable">cooldownEndTime</span> <span class="operator">=</span> playerCooldownsMap.get(skillName);</span><br><span class="line">                <span class="keyword">if</span> (System.currentTimeMillis() &lt; cooldownEndTime) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    playerCooldownsMap.remove(skillName);</span><br><span class="line">                    <span class="keyword">if</span> (playerCooldownsMap.isEmpty()) &#123;</span><br><span class="line">                        playerCooldowns.remove(playerId);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">long</span> <span class="title function_">getRemainingCooldownTime</span><span class="params">(UUID playerId, String skillName)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (isOnCooldown(playerId, skillName)) &#123;</span><br><span class="line">            <span class="type">long</span> <span class="variable">cooldownEndTime</span> <span class="operator">=</span> playerCooldowns.get(playerId).get(skillName);</span><br><span class="line">            <span class="keyword">return</span> (cooldownEndTime - System.currentTimeMillis()) / <span class="number">1000L</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">clearCooldown</span><span class="params">(UUID playerId, String skillName)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (playerCooldowns.containsKey(playerId)) &#123;</span><br><span class="line">            Map&lt;String, Long&gt; playerCooldownsMap = playerCooldowns.get(playerId);</span><br><span class="line">            playerCooldownsMap.remove(skillName);</span><br><span class="line">            <span class="keyword">if</span> (playerCooldownsMap.isEmpty()) &#123;</span><br><span class="line">                playerCooldowns.remove(playerId);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">clearAllCooldowns</span><span class="params">(UUID playerId)</span> &#123;</span><br><span class="line">        playerCooldowns.remove(playerId);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用方法:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">CooldownSystem</span> <span class="variable">cooldownSystem</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CooldownSystem</span>();</span><br><span class="line">        cooldownSystem.OnColldownMenu(<span class="string">&quot;玩家的uid&quot;</span>, <span class="string">&quot;技能或事件名称&quot;</span>, 冷却时间L, <span class="keyword">new</span> <span class="title class_">CooldownSystem</span>.OnCooldownInterFace() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sendOnCooldownMsg</span><span class="params">(String skillName, <span class="type">long</span> RemainingCooldownTime)</span> &#123;</span><br><span class="line">                <span class="comment">//技能处于冷却期间事件</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">createCooldownSkill</span><span class="params">(String skillName)</span> &#123;</span><br><span class="line">                <span class="comment">//技能冷却开始时发生的事件</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sendLastCoolDownMsg</span><span class="params">(String skillName)</span> &#123;</span><br><span class="line">                <span class="comment">//技能冷却结时发生的事件</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Minecraft </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Minecraft </tag>
            
            <tag> Bukkit </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>模组&amp;插件制作进度</title>
      <link href="/2023/06/27/McModMade/"/>
      <url>/2023/06/27/McModMade/</url>
      
        <content type="html"><![CDATA[<p>待填写</p>]]></content>
      
      
      <categories>
          
          <category> Minecraft </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Minecraft </tag>
            
            <tag> Bukkit </tag>
            
            <tag> Forge </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>front-matter详解</title>
      <link href="/2023/06/27/front-matter/"/>
      <url>/2023/06/27/front-matter/</url>
      
        <content type="html"><![CDATA[<table><thead><tr><th>写法</th><th align="center">解释</th></tr></thead><tbody><tr><td>title</td><td align="center">【必需】文章标题</td></tr><tr><td>date</td><td align="center">【必需】文章创建日期</td></tr><tr><td>updated</td><td align="center">【可选】文章更新日期</td></tr><tr><td>tags</td><td align="center">【可选】文章标签</td></tr><tr><td>categories</td><td align="center">【可选】文章分类</td></tr><tr><td>keywords</td><td align="center">【可选】文章关键字</td></tr><tr><td>description</td><td align="center">【可选】文章描述</td></tr><tr><td>top_img</td><td align="center">【可选】文章顶部图片</td></tr><tr><td>cover</td><td align="center">【可选】文章缩略图(如果没有设置 top_img,文章页顶部将显示缩略图，可设为 false&#x2F;图片地址&#x2F;留空)</td></tr><tr><td>comments</td><td align="center">【可选】显示文章评论模块(默认 true)</td></tr><tr><td>toc</td><td align="center">【可选】显示文章 TOC(默认为设置中 toc 的 enable 配置)</td></tr><tr><td>toc_number</td><td align="center">【可选】显示 toc_number(默认为设置中 toc 的 number 配置)</td></tr><tr><td>toc_style_simple</td><td align="center">【可选】显示 toc 简洁模式</td></tr><tr><td>copyright</td><td align="center">【可选】显示文章版权模块(默认为设置中 post_copyright 的 enable 配置)</td></tr><tr><td>copyright_author</td><td align="center">【可选】文章版权模块的文章作者</td></tr><tr><td>copyright_author_href</td><td align="center">【可选】文章版权模块的文章作者链接</td></tr><tr><td>copyright_url</td><td align="center">【可选】文章版权模块的文章链接链接</td></tr><tr><td>copyright_info</td><td align="center">【可选】文章版权模块的版权声明文字</td></tr><tr><td>mathjax</td><td align="center">【可选】显示 mathjax(当设置 mathjax 的 per_page: false 时，才需要配置，默认 false)</td></tr><tr><td>katex</td><td align="center">【可选】显示 katex(当设置 katex 的 per_page: false 时，才需要配置，默认 false)</td></tr><tr><td>aplayer</td><td align="center">【可选】在需要的页面加载 aplayer 的 js 和 css,请参考文章下面的音乐 配置</td></tr><tr><td>highlight_shrink</td><td align="center">【可选】配置代码框是否展开(true&#x2F;false)(默认为设置中 highlight_shrink 的配置)</td></tr><tr><td>aside</td><td align="center">【可选】显示侧边栏 (默认 true)</td></tr><tr><td>swiper_index</td><td align="center">【可选】首页轮播图配置 index 索引，数字越小越靠前</td></tr><tr><td>top_group_index</td><td align="center">【可选】首页右侧卡片组配置, 数字越小越靠前</td></tr><tr><td>background</td><td align="center">【可选】文章背景可配置为 16 进制颜色值</td></tr></tbody></table><p>首页轮播图配置: <code>swiper_index</code>, 数字越小越靠前<br>首页卡片配置: <code>top_group_index</code>, 数字越小越靠前<br>page 中<code>background</code>, 可配置为 16 进制颜色值</p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>text</title>
      <link href="/2023/06/27/text/"/>
      <url>/2023/06/27/text/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/06/27/hello-world/"/>
      <url>/2023/06/27/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
